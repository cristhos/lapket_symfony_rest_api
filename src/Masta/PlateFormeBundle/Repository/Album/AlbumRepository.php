<?php

namespace Masta\PlateFormeBundle\Repository\Album;

use Doctrine\ORM\EntityRepository;

use Pagerfanta\Adapter\DoctrineORMAdapter;
use Pagerfanta\Pagerfanta;

/**
 * AlbumRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AlbumRepository extends EntityRepository
{
    public function getAlbums($limit, $page)
    {
        $queryBuilder = $this->createQueryBuilder('a')->getQuery();
        $pagerAdapter = new DoctrineORMAdapter($queryBuilder);
        $pager = new Pagerfanta($pagerAdapter);
        $pager->setCurrentPage($page);
        $pager->setMaxPerPage($limit);

        return $pager;
    }

    public function getAlbumsCategory($limit, $page, $category_id)
    {
        $queryBuilder = $this->createQueryBuilder('a')
            ->leftJoin('a.category', 'c')->addSelect('c')
            ->where('c.id = :category_id')->setParameter('category_id', $category_id)
            ->orderBy('a.publishedAt', 'DESC')
            ->getQuery();
        $pagerAdapter = new DoctrineORMAdapter($queryBuilder);
        $pager = new Pagerfanta($pagerAdapter);
        $pager->setCurrentPage($page);
        $pager->setMaxPerPage($limit);

        return $pager;
    }

    public function getAlbumsByUser($limit, $page, $slug)
    {
        $queryBuilder = $this->createQueryBuilder('a')
            ->leftJoin('a.author', 'u')->addSelect('u')
            ->where('u.username = :slug')->setParameter('slug', $slug)
            ->orWhere('u.email = :slug')->setParameter('slug', $slug)
            ->orderBy('a.publishedAt', 'DESC')
            ->getQuery();
        $pagerAdapter = new DoctrineORMAdapter($queryBuilder);
        $pager = new Pagerfanta($pagerAdapter);
        $pager->setCurrentPage($page);
        $pager->setMaxPerPage($limit);

        return $pager;
    }

}